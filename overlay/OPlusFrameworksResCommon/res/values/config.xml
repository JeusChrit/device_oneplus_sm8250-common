<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2022 The LineageOS Project
     SPDX-License-Identifier: Apache-2.0
-->
<resources>

    <!-- Whether device has physical alert slider. -->
    <bool name="config_hasAlertSlider">true</bool>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system_ext/app/KeyHandler/KeyHandler.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>co.aospa.settings.device.KeyHandler</item>
    </string-array>

    <!-- Gestures' key codes. If the gesture is not supported set it to 0. -->
    <integer name="config_doubleTapKeyCode">143</integer>
    <integer name="config_singleTapKeyCode">262</integer>
    <integer name="config_drawVKeyCode">248</integer>
    <integer name="config_drawInverseVKeyCode">249</integer>
    <integer name="config_drawOKeyCode">252</integer>
    <integer name="config_drawMKeyCode">258</integer>
    <integer name="config_drawWKeyCode">259</integer>
    <integer name="config_drawSKeyCode">264</integer>
    <integer name="config_drawArrowLeftKeyCode">251</integer>
    <integer name="config_drawArrowRightKeyCode">250</integer>
    <integer name="config_oneFingerSwipeUpKeyCode">257</integer>
    <integer name="config_oneFingerSwipeRightKeyCode">254</integer>
    <integer name="config_oneFingerSwipeDownKeyCode">256</integer>
    <integer name="config_oneFingerSwipeLeftKeyCode">255</integer>
    <integer name="config_twoFingerSwipeKeyCode">253</integer>

    <!-- Default settings for gestures:
             0 - Disabled
             1 - Wake
             2 - Pulse
             3 - Flashlight
             4 - Airplane
             5 - Play/Pause
             6 - Next
             7 - Previous
             8 - Camera
             9 - Dialer -->
    <integer name="config_doubleTapDefault">1</integer>
    <integer name="config_singleTapDefault">0</integer>
    <integer name="config_drawVDefault">0</integer>
    <integer name="config_drawODefault">0</integer>
    <integer name="config_twoFingerSwipeDefault">0</integer>
    <integer name="config_drawArrowLeftDefault">0</integer>
    <integer name="config_drawArrowRightDefault">0</integer>

    <!-- Whether to intercept inputs on screen off. -->
    <bool name="config_enableKeyHandler">true</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- True if camera app should be pinned via Pinner Service -->
    <bool name="config_pinnerCameraApp">true</bool>

    <!-- True if home app should be pinned via Pinner Service -->
    <bool name="config_pinnerHomeApp">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Delay in ms before invoking single tap gesture
         Should be set to dt2w max time / 2 when needed -->
    <integer name="config_singleTapDelay">500</integer>

    <!-- Build properties from a GMS certified device against current platform SPL level -->
    <string-array name="config_certifiedBuildProperties" translatable="false">
    <item>BRAND:motorola</item>
    <item>MANUFACTURER:motorola</item>
    <item>DEVICE:griffin</item>
    <item>PRODUCT:griffin_retcn</item>
    <item>MODEL:XT1650-05</item>
    <item>FINGERPRINT:motorola/griffin_retcn/griffin:6.0.1/MCC24.246-37/42:user/release-keys</item>
    <item>VERSION.RELEASE:6.0.1</item>
    </string-array>

    <!-- The maximum range of gamma adjustment possible using the screen
    <bool name="config_enableBurnInProtection">true</bool>
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">150%</fraction>

    <!-- True if the device supports Sustained Performance Mode-->
    <bool name="config_sustainedPerformanceModeSupported">true</bool>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>10</item>
    </integer-array>

    <!-- Indicate available ColorDisplayManager.COLOR_MODE_xxx. -->
    <integer-array name="config_availableColorModes">
        <item>0</item>
        <item>256</item>
        <item>258</item>
        <item>259</item>
    </integer-array>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Type of the udfps long press sensor. Empty if long press is not supported. -->
    <string name="config_dozeUdfpsLongPressSensorType" translatable="false">co.aospa.sensor.udfps</string>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <!-- Whether the new Auto Selection Network UI should be shown -->
    <bool name="config_enableNewAutoSelectNetworkUI">true</bool>

    <!-- Safe headphone volume index. When music stream volume is below this index
    the SPL on headphone output is compliant to EN 60950 requirements for portable music
    players. -->
    <integer name="config_safe_media_volume_index">18</integer>

    <!-- Safe USB headset gain. This value is used to ensure that the SPL on the USB
    headset output is compliant to EN 60950 requirements for portable music players. -->
    <integer name="config_safe_media_volume_usb_mB">-1650</integer>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
         manually by the user. Off by default, since the expected haptic feedback may not be
         available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>

    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName">oneplus.sensor.pocket</string>

</resources>
